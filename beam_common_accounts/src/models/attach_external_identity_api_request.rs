/*
 * accounts basic
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AttachExternalIdentityApiRequest {
    #[serde(rename = "provider_service")]
    pub provider_service: String,
    #[serde(rename = "external_token")]
    pub external_token: String,
    #[serde(rename = "challenge_solution", skip_serializing_if = "Option::is_none")]
    pub challenge_solution: Option<Box<crate::models::ChallengeSolution>>,
    #[serde(rename = "provider_namespace", skip_serializing_if = "Option::is_none")]
    pub provider_namespace: Option<String>,
}

impl AttachExternalIdentityApiRequest {
    pub fn new(
        provider_service: String,
        external_token: String,
    ) -> AttachExternalIdentityApiRequest {
        AttachExternalIdentityApiRequest {
            provider_service,
            external_token,
            challenge_solution: None,
            provider_namespace: None,
        }
    }
}
