/*
 * auth basic
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TokenResponse {
    #[serde(rename = "access_token", skip_serializing_if = "Option::is_none")]
    pub access_token: Option<String>,
    #[serde(rename = "expires_in")]
    pub expires_in: i64,
    #[serde(rename = "refresh_token", skip_serializing_if = "Option::is_none")]
    pub refresh_token: Option<String>,
    #[serde(rename = "scopes", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<Vec<String>>,
    #[serde(rename = "token_type")]
    pub token_type: String,
    #[serde(rename = "challenge_token", skip_serializing_if = "Option::is_none")]
    pub challenge_token: Option<String>,
}

impl TokenResponse {
    pub fn new(expires_in: i64, token_type: String) -> TokenResponse {
        TokenResponse {
            access_token: None,
            expires_in,
            refresh_token: None,
            scopes: None,
            token_type,
            challenge_token: None,
        }
    }
}
