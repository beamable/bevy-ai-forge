/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventPhaseRuntime {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "startTime")]
    pub start_time: i64,
    #[serde(rename = "endTime")]
    pub end_time: i64,
    #[serde(rename = "rules")]
    pub rules: Vec<models::EventRule>,
}

impl EventPhaseRuntime {
    pub fn new(name: String, start_time: i64, end_time: i64, rules: Vec<models::EventRule>) -> EventPhaseRuntime {
        EventPhaseRuntime {
            name,
            start_time,
            end_time,
            rules,
        }
    }
}

