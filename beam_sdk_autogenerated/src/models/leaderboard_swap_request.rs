/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LeaderboardSwapRequest {
    #[serde(rename = "winnerId", skip_serializing_if = "Option::is_none")]
    pub winner_id: Option<i64>,
    #[serde(rename = "loserId", skip_serializing_if = "Option::is_none")]
    pub loser_id: Option<i64>,
    #[serde(rename = "swapBase")]
    pub swap_base: i64,
    #[serde(rename = "delta")]
    pub delta: i64,
}

impl LeaderboardSwapRequest {
    pub fn new(swap_base: i64, delta: i64) -> LeaderboardSwapRequest {
        LeaderboardSwapRequest {
            winner_id: None,
            loser_id: None,
            swap_base,
            delta,
        }
    }
}

