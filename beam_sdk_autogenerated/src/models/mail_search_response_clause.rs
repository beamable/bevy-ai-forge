/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MailSearchResponseClause {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "count")]
    pub count: i64,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Vec<models::Message>>,
}

impl MailSearchResponseClause {
    pub fn new(name: String, count: i64) -> MailSearchResponseClause {
        MailSearchResponseClause {
            name,
            count,
            content: None,
        }
    }
}

