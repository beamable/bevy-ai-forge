/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlayerStatRequirement {
    #[serde(rename = "domain", skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    #[serde(rename = "stat")]
    pub stat: String,
    #[serde(rename = "constraint")]
    pub constraint: String,
    #[serde(rename = "value")]
    pub value: String,
    #[serde(rename = "access", skip_serializing_if = "Option::is_none")]
    pub access: Option<String>,
}

impl PlayerStatRequirement {
    pub fn new(stat: String, constraint: String, value: String) -> PlayerStatRequirement {
        PlayerStatRequirement {
            domain: None,
            stat,
            constraint,
            value,
            access: None,
        }
    }
}

