/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventPlayerPhaseView {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "durationSeconds")]
    pub duration_seconds: i64,
    #[serde(rename = "rules")]
    pub rules: Vec<models::EventRule>,
}

impl EventPlayerPhaseView {
    pub fn new(name: String, duration_seconds: i64, rules: Vec<models::EventRule>) -> EventPlayerPhaseView {
        EventPlayerPhaseView {
            name,
            duration_seconds,
            rules,
        }
    }
}

