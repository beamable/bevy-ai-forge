/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchMakingMatchesPvpResponse {
    #[serde(rename = "result")]
    pub result: String,
    #[serde(rename = "totalEntries")]
    pub total_entries: i32,
    #[serde(rename = "playerRank")]
    pub player_rank: Box<models::MatchMakingRanking>,
    #[serde(rename = "windows")]
    pub windows: Vec<models::MatchMakingWindowResp>,
}

impl MatchMakingMatchesPvpResponse {
    pub fn new(result: String, total_entries: i32, player_rank: models::MatchMakingRanking, windows: Vec<models::MatchMakingWindowResp>) -> MatchMakingMatchesPvpResponse {
        MatchMakingMatchesPvpResponse {
            result,
            total_entries,
            player_rank: Box::new(player_rank),
            windows,
        }
    }
}

