/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceStatus {
    #[serde(rename = "isCurrent")]
    pub is_current: bool,
    #[serde(rename = "running")]
    pub running: bool,
    #[serde(rename = "serviceName")]
    pub service_name: String,
    #[serde(rename = "imageId")]
    pub image_id: String,
    #[serde(rename = "serviceDependencyReferences", skip_serializing_if = "Option::is_none")]
    pub service_dependency_references: Option<Vec<models::ServiceDependencyReference>>,
}

impl ServiceStatus {
    pub fn new(is_current: bool, running: bool, service_name: String, image_id: String) -> ServiceStatus {
        ServiceStatus {
            is_current,
            running,
            service_name,
            image_id,
            service_dependency_references: None,
        }
    }
}

