/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Trial {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "activated", skip_serializing_if = "Option::is_none")]
    pub activated: Option<i64>,
    #[serde(rename = "cohorts")]
    pub cohorts: Vec<models::Cohort>,
    #[serde(rename = "ctype")]
    pub ctype: String,
    #[serde(rename = "scheduleStart", skip_serializing_if = "Option::is_none")]
    pub schedule_start: Option<i64>,
    #[serde(rename = "assigned")]
    pub assigned: i64,
    #[serde(rename = "strategy")]
    pub strategy: String,
    #[serde(rename = "customRules", skip_serializing_if = "Option::is_none")]
    pub custom_rules: Option<Vec<models::CustomCohortRule>>,
    #[serde(rename = "ttype")]
    pub ttype: String,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<i64>,
    #[serde(rename = "active")]
    pub active: bool,
}

impl Trial {
    pub fn new(name: String, cohorts: Vec<models::Cohort>, ctype: String, assigned: i64, strategy: String, ttype: String, active: bool) -> Trial {
        Trial {
            name,
            activated: None,
            cohorts,
            ctype,
            schedule_start: None,
            assigned,
            strategy,
            custom_rules: None,
            ttype,
            created: None,
            active,
        }
    }
}

