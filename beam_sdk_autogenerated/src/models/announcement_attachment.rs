/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnnouncementAttachment {
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "count")]
    pub count: i32,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Vec<models::AttachmentProperty>>,
}

impl AnnouncementAttachment {
    pub fn new(symbol: String, count: i32) -> AnnouncementAttachment {
        AnnouncementAttachment {
            symbol,
            count,
            r#type: None,
            properties: None,
        }
    }
}

