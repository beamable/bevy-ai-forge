/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatUpdateRequest {
    #[serde(rename = "objectId", skip_serializing_if = "Option::is_none")]
    pub object_id: Option<String>,
    #[serde(rename = "set", skip_serializing_if = "Option::is_none")]
    pub set: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "add", skip_serializing_if = "Option::is_none")]
    pub add: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "emitAnalytics", skip_serializing_if = "Option::is_none")]
    pub emit_analytics: Option<bool>,
}

impl StatUpdateRequest {
    pub fn new() -> StatUpdateRequest {
        StatUpdateRequest {
            object_id: None,
            set: None,
            add: None,
            emit_analytics: None,
        }
    }
}

