/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobExecutionEvent {
    #[serde(rename = "jobId", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<String>,
    #[serde(rename = "executionId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub execution_id: Option<Option<String>>,
    #[serde(rename = "jobDefinition", skip_serializing_if = "Option::is_none")]
    pub job_definition: Option<Box<models::JobDefinition>>,
    #[serde(rename = "retryPolicy", skip_serializing_if = "Option::is_none")]
    pub retry_policy: Option<Box<models::JobRetryPolicy>>,
    #[serde(rename = "executionTime", skip_serializing_if = "Option::is_none")]
    pub execution_time: Option<String>,
    #[serde(rename = "retryCount", skip_serializing_if = "Option::is_none")]
    pub retry_count: Option<i32>,
    #[serde(rename = "executionKey", skip_serializing_if = "Option::is_none")]
    pub execution_key: Option<String>,
}

impl JobExecutionEvent {
    pub fn new() -> JobExecutionEvent {
        JobExecutionEvent {
            job_id: None,
            execution_id: None,
            job_definition: None,
            retry_policy: None,
            execution_time: None,
            retry_count: None,
            execution_key: None,
        }
    }
}

