/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DatabasePerformanceRequest {
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    #[serde(rename = "storageObjectName")]
    pub storage_object_name: String,
    #[serde(rename = "granularity")]
    pub granularity: String,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<String>,
}

impl DatabasePerformanceRequest {
    pub fn new(storage_object_name: String, granularity: String) -> DatabasePerformanceRequest {
        DatabasePerformanceRequest {
            end_date: None,
            storage_object_name,
            granularity,
            start_date: None,
            period: None,
        }
    }
}

