/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupUserMember {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "subGroups")]
    pub sub_groups: Vec<models::GroupUserMember>,
    #[serde(rename = "joined", skip_serializing_if = "Option::is_none")]
    pub joined: Option<i64>,
}

impl GroupUserMember {
    pub fn new(id: i64, sub_groups: Vec<models::GroupUserMember>) -> GroupUserMember {
        GroupUserMember {
            id,
            sub_groups,
            joined: None,
        }
    }
}

