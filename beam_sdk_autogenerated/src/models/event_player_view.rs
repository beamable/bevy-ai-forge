/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventPlayerView {
    #[serde(rename = "running")]
    pub running: Vec<models::EventPlayerStateView>,
    #[serde(rename = "done")]
    pub done: Vec<models::EventPlayerStateView>,
}

impl EventPlayerView {
    pub fn new(running: Vec<models::EventPlayerStateView>, done: Vec<models::EventPlayerStateView>) -> EventPlayerView {
        EventPlayerView {
            running,
            done,
        }
    }
}

