/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Manifest {
    #[serde(rename = "archived", skip_serializing_if = "Option::is_none")]
    pub archived: Option<bool>,
    #[serde(rename = "references")]
    pub references: Vec<models::ManifestReferencesInner>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "checksum")]
    pub checksum: String,
    #[serde(rename = "created")]
    pub created: i64,
}

impl Manifest {
    pub fn new(references: Vec<models::ManifestReferencesInner>, id: String, checksum: String, created: i64) -> Manifest {
        Manifest {
            archived: None,
            references,
            id,
            checksum,
            created,
        }
    }
}

