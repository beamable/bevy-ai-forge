/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookComet {
    #[serde(rename = "method")]
    pub method: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "variables")]
    pub variables: Box<models::RouteVariables>,
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "route")]
    pub route: Box<models::ServiceRoute>,
    #[serde(rename = "parameters")]
    pub parameters: Box<models::RouteParameters>,
}

impl WebhookComet {
    pub fn new(method: String, variables: models::RouteVariables, symbol: String, route: models::ServiceRoute, parameters: models::RouteParameters) -> WebhookComet {
        WebhookComet {
            method,
            description: None,
            variables: Box::new(variables),
            symbol,
            route: Box::new(route),
            parameters: Box::new(parameters),
        }
    }
}

