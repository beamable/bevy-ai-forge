/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubscriberDetailsResponse {
    #[serde(rename = "customChannelPrefix")]
    pub custom_channel_prefix: String,
    #[serde(rename = "playerForRealmChannel")]
    pub player_for_realm_channel: String,
    #[serde(rename = "authenticationKey")]
    pub authentication_key: String,
    #[serde(rename = "playerChannels")]
    pub player_channels: Vec<String>,
    #[serde(rename = "gameGlobalNotificationChannel", skip_serializing_if = "Option::is_none")]
    pub game_global_notification_channel: Option<String>,
    #[serde(rename = "gameNotificationChannel")]
    pub game_notification_channel: String,
    #[serde(rename = "subscribeKey")]
    pub subscribe_key: String,
    #[serde(rename = "playerChannel")]
    pub player_channel: String,
}

impl SubscriberDetailsResponse {
    pub fn new(custom_channel_prefix: String, player_for_realm_channel: String, authentication_key: String, player_channels: Vec<String>, game_notification_channel: String, subscribe_key: String, player_channel: String) -> SubscriberDetailsResponse {
        SubscriberDetailsResponse {
            custom_channel_prefix,
            player_for_realm_channel,
            authentication_key,
            player_channels,
            game_global_notification_channel: None,
            game_notification_channel,
            subscribe_key,
            player_channel,
        }
    }
}

