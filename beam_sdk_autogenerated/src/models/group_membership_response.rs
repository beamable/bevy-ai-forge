/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupMembershipResponse {
    #[serde(rename = "gamerTag", skip_serializing_if = "Option::is_none")]
    pub gamer_tag: Option<i64>,
    #[serde(rename = "member")]
    pub member: bool,
    #[serde(rename = "type")]
    pub r#type: models::GroupType,
    #[serde(rename = "subGroups")]
    pub sub_groups: Vec<i64>,
    #[serde(rename = "group")]
    pub group: Box<models::GroupMetaData>,
}

impl GroupMembershipResponse {
    pub fn new(member: bool, r#type: models::GroupType, sub_groups: Vec<i64>, group: models::GroupMetaData) -> GroupMembershipResponse {
        GroupMembershipResponse {
            gamer_tag: None,
            member,
            r#type,
            sub_groups,
            group: Box::new(group),
        }
    }
}

