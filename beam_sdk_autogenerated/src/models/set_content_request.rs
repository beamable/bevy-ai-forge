/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SetContentRequest {
    #[serde(rename = "event")]
    pub event: Box<models::Event>,
    #[serde(rename = "origin")]
    pub origin: String,
    #[serde(rename = "rootEventId", skip_serializing_if = "Option::is_none")]
    pub root_event_id: Option<String>,
    #[serde(rename = "originType", skip_serializing_if = "Option::is_none")]
    pub origin_type: Option<String>,
}

impl SetContentRequest {
    pub fn new(event: models::Event, origin: String) -> SetContentRequest {
        SetContentRequest {
            event: Box::new(event),
            origin,
            root_event_id: None,
            origin_type: None,
        }
    }
}

