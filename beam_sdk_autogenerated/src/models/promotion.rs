/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Promotion {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "source")]
    pub source: Box<models::Promotable>,
    #[serde(rename = "destination")]
    pub destination: Box<models::Promotable>,
}

impl Promotion {
    pub fn new(id: String, source: models::Promotable, destination: models::Promotable) -> Promotion {
        Promotion {
            id,
            source: Box::new(source),
            destination: Box::new(destination),
        }
    }
}

