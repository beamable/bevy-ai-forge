/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Schedule {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "crons", skip_serializing_if = "Option::is_none")]
    pub crons: Option<Vec<String>>,
    #[serde(rename = "activeTo", skip_serializing_if = "Option::is_none")]
    pub active_to: Option<String>,
    #[serde(rename = "activeFrom")]
    pub active_from: String,
    #[serde(rename = "definitions", skip_serializing_if = "Option::is_none")]
    pub definitions: Option<Vec<models::ScheduleDefinition>>,
}

impl Schedule {
    pub fn new(active_from: String) -> Schedule {
        Schedule {
            description: None,
            crons: None,
            active_to: None,
            active_from,
            definitions: None,
        }
    }
}

