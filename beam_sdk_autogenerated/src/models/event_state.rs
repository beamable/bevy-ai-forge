/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EventState {
    #[serde(rename = "running")]
    Running,
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "cancelled")]
    Cancelled,
    #[serde(rename = "done")]
    Done,
    #[serde(rename = "pending")]
    Pending,

}

impl std::fmt::Display for EventState {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Running => write!(f, "running"),
            Self::Unknown => write!(f, "unknown"),
            Self::Cancelled => write!(f, "cancelled"),
            Self::Done => write!(f, "done"),
            Self::Pending => write!(f, "pending"),
        }
    }
}

impl Default for EventState {
    fn default() -> EventState {
        Self::Running
    }
}

