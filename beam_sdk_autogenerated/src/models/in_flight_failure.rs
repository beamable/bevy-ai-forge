/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InFlightFailure {
    #[serde(rename = "serviceObjectId")]
    pub service_object_id: String,
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
    #[serde(rename = "serviceName")]
    pub service_name: String,
    #[serde(rename = "inFlightMessage")]
    pub in_flight_message: Box<models::InFlightMessage>,
    #[serde(rename = "lastError")]
    pub last_error: String,
    #[serde(rename = "id")]
    pub id: String,
}

impl InFlightFailure {
    pub fn new(service_object_id: String, timestamp: i64, service_name: String, in_flight_message: models::InFlightMessage, last_error: String, id: String) -> InFlightFailure {
        InFlightFailure {
            service_object_id,
            timestamp,
            service_name,
            in_flight_message: Box::new(in_flight_message),
            last_error,
            id,
        }
    }
}

