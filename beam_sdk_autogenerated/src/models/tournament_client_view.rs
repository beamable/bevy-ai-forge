/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TournamentClientView {
    #[serde(rename = "tournamentId")]
    pub tournament_id: String,
    #[serde(rename = "startTimeUtc")]
    pub start_time_utc: String,
    #[serde(rename = "secondsRemaining")]
    pub seconds_remaining: i64,
    #[serde(rename = "cycle")]
    pub cycle: i32,
    #[serde(rename = "endTimeUtc")]
    pub end_time_utc: String,
    #[serde(rename = "contentId")]
    pub content_id: String,
}

impl TournamentClientView {
    pub fn new(tournament_id: String, start_time_utc: String, seconds_remaining: i64, cycle: i32, end_time_utc: String, content_id: String) -> TournamentClientView {
        TournamentClientView {
            tournament_id,
            start_time_utc,
            seconds_remaining,
            cycle,
            end_time_utc,
            content_id,
        }
    }
}

