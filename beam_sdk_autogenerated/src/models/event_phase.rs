/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventPhase {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "duration_minutes")]
    pub duration_minutes: i32,
    #[serde(rename = "durationMillis")]
    pub duration_millis: i64,
    #[serde(rename = "rules", skip_serializing_if = "Option::is_none")]
    pub rules: Option<Vec<models::EventRule>>,
    #[serde(rename = "durationSeconds")]
    pub duration_seconds: i64,
}

impl EventPhase {
    pub fn new(name: String, duration_minutes: i32, duration_millis: i64, duration_seconds: i64) -> EventPhase {
        EventPhase {
            name,
            duration_minutes,
            duration_millis,
            rules: None,
            duration_seconds,
        }
    }
}

