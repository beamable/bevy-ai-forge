/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupCreate {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "enrollmentType")]
    pub enrollment_type: String,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    #[serde(rename = "requirement")]
    pub requirement: i64,
    #[serde(rename = "clientData", skip_serializing_if = "Option::is_none")]
    pub client_data: Option<String>,
    #[serde(rename = "scores", skip_serializing_if = "Option::is_none")]
    pub scores: Option<Vec<models::GroupScoreBinding>>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i32>,
    #[serde(rename = "type")]
    pub r#type: models::GroupType,
    #[serde(rename = "maxSize")]
    pub max_size: i32,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<i64>,
}

impl GroupCreate {
    pub fn new(name: String, enrollment_type: String, requirement: i64, r#type: models::GroupType, max_size: i32) -> GroupCreate {
        GroupCreate {
            name,
            enrollment_type,
            tag: None,
            requirement,
            client_data: None,
            scores: None,
            time: None,
            r#type,
            max_size,
            group: None,
        }
    }
}

