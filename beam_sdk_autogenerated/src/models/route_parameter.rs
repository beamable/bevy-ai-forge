/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RouteParameter {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "body")]
    pub body: String,
    #[serde(rename = "typeName")]
    pub type_name: String,
    #[serde(rename = "variableRef", skip_serializing_if = "Option::is_none")]
    pub variable_ref: Option<Box<models::VariableReference>>,
}

impl RouteParameter {
    pub fn new(name: String, body: String, type_name: String) -> RouteParameter {
        RouteParameter {
            name,
            body,
            type_name,
            variable_ref: None,
        }
    }
}

