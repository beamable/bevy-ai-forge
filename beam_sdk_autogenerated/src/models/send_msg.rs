/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendMsg {
    #[serde(rename = "to")]
    pub to: Vec<i64>,
    #[serde(rename = "notification", skip_serializing_if = "Option::is_none")]
    pub notification: Option<Box<models::SendNotification>>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<std::collections::HashMap<String, String>>,
}

impl SendMsg {
    pub fn new(to: Vec<i64>) -> SendMsg {
        SendMsg {
            to,
            notification: None,
            data: None,
        }
    }
}

