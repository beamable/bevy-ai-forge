/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LeaderboardCohort {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "statRequirements")]
    pub stat_requirements: Vec<models::PlayerStatRequirement>,
}

impl LeaderboardCohort {
    pub fn new(id: String, stat_requirements: Vec<models::PlayerStatRequirement>) -> LeaderboardCohort {
        LeaderboardCohort {
            id,
            description: None,
            stat_requirements,
        }
    }
}

