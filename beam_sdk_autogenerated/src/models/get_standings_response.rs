/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetStandingsResponse {
    #[serde(rename = "entries")]
    pub entries: Vec<models::TournamentEntry>,
    #[serde(rename = "me", skip_serializing_if = "Option::is_none")]
    pub me: Option<Box<models::TournamentEntry>>,
}

impl GetStandingsResponse {
    pub fn new(entries: Vec<models::TournamentEntry>) -> GetStandingsResponse {
        GetStandingsResponse {
            entries,
            me: None,
        }
    }
}

