/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostManifestRequest {
    #[serde(rename = "manifest")]
    pub manifest: Vec<models::ServiceReference>,
    #[serde(rename = "comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<String>,
    #[serde(rename = "autoDeploy", skip_serializing_if = "Option::is_none")]
    pub auto_deploy: Option<bool>,
    #[serde(rename = "storageReferences", skip_serializing_if = "Option::is_none")]
    pub storage_references: Option<Vec<models::ServiceStorageReference>>,
}

impl PostManifestRequest {
    pub fn new(manifest: Vec<models::ServiceReference>) -> PostManifestRequest {
        PostManifestRequest {
            manifest,
            comments: None,
            auto_deploy: None,
            storage_references: None,
        }
    }
}

