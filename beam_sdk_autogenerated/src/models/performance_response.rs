/*
 * Auth Actor
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PerformanceResponse {
    #[serde(rename = "namespaces")]
    pub namespaces: Vec<models::PaNamespace>,
    #[serde(rename = "indexes")]
    pub indexes: Vec<models::PaSuggestedIndex>,
    #[serde(rename = "queries")]
    pub queries: Vec<models::PaSlowQuery>,
    #[serde(rename = "databaseMeasurements")]
    pub database_measurements: Box<models::DatabaseMeasurements>,
}

impl PerformanceResponse {
    pub fn new(namespaces: Vec<models::PaNamespace>, indexes: Vec<models::PaSuggestedIndex>, queries: Vec<models::PaSlowQuery>, database_measurements: models::DatabaseMeasurements) -> PerformanceResponse {
        PerformanceResponse {
            namespaces,
            indexes,
            queries,
            database_measurements: Box::new(database_measurements),
        }
    }
}

